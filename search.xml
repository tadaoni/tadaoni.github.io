<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>人工智能考试速通--逻辑与推理</title>
      <link href="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/"/>
      <url>/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="人工智能考试速通——逻辑与推理"><a href="#人工智能考试速通——逻辑与推理" class="headerlink" title="人工智能考试速通——逻辑与推理"></a>人工智能考试速通——逻辑与推理</h1><p>人工智能一节课没听过，快期末了开始看课件自救。</p><span id="more"></span><h3 id="命题逻辑"><a href="#命题逻辑" class="headerlink" title="命题逻辑"></a>命题逻辑</h3><p><strong>主要的命题联结词：</strong></p><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607165043319.png" alt="image-20230607165043319"></p><p>通过命题联结词得到的命题叫<strong>复合命题</strong>，复合命题的真假可以通过<strong>真值表</strong>来计算。</p><p><strong>逻辑等价</strong>：给定命题p和命题q，如果p↔q是重言式（永真式）， 那么p和q在逻辑上等价，一般用≡来表示，即p≡q</p><p>一些重要的等价：</p><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607165446899.png" alt="image-20230607165446899"></p><p>命题逻辑中的推理规则：</p><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607165605339.png" alt="image-20230607165605339"></p><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607165614278.png" alt="image-20230607165614278"></p><p>例子：</p><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607165954108.png" alt="image-20230607165954108"></p><h3 id="谓词逻辑"><a href="#谓词逻辑" class="headerlink" title="谓词逻辑"></a>谓词逻辑</h3><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607170125364.png" alt="image-20230607170125364"></p><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607170157415.png" alt="image-20230607170157415"></p><p>推理规则：</p><p>设A(x)是谓词公式， x和y是变元， a是常量符号</p><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607170241324.png" alt="image-20230607170241324"></p><p>例子：</p><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607170315473.png" alt="image-20230607170315473"></p><h3 id="知识图谱推理"><a href="#知识图谱推理" class="headerlink" title="知识图谱推理"></a>知识图谱推理</h3><p>**FOIL (First Order Inductive Learner)**通过序贯覆盖实现规则推理.</p><p>推理思路：逐步给目标谓词添加前提约束谓词，直到所构成的推理规则不覆盖任何反例。</p><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607171132111.png" alt="image-20230607171132111"></p><p>依次将谓词加入到推理规则中作为前提约束谓词，并计算所得到新推理规则的FOIL增益值。基于计算所得FOIL增益值来选择最佳前提约束谓词。</p><p>经典例子：</p><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607180455786-168613944039615.png" alt="image-20230607180455786"></p><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607180513154.png" alt="image-20230607180513154"></p><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607180930116.png" alt="image-20230607180930116"></p><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607180940273.png" alt="image-20230607180940273"></p><p><strong>路径排序推理（PRA）</strong>的基本思想是将实体之间的关联路径作为特征，来学习目标关系的分类器。工作流程分三步：</p><p>​(1) <strong>特征抽取</strong></p><p>​(2) <strong>特征计算</strong></p><p>​(3) <strong>分类器训练</strong></p><p>例子：</p><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607181456857.png" alt="image-20230607181456857"></p><h3 id="因果推理"><a href="#因果推理" class="headerlink" title="因果推理"></a>因果推理</h3><p>不考，狗都不看</p><h3 id="作业题"><a href="#作业题" class="headerlink" title="作业题"></a>作业题</h3><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607182114527.png" alt="image-20230607182114527"></p><p><img src="/2023/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/06/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E9%80%9F%E9%80%9A-%E9%80%BB%E8%BE%91%E4%B8%8E%E6%8E%A8%E7%90%86/image-20230607194101430.png" alt="image-20230607194101430"></p><h3 id="逻辑与推理-完"><a href="#逻辑与推理-完" class="headerlink" title="逻辑与推理 完"></a>逻辑与推理 完</h3>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>软工前端实验2</title>
      <link href="/2023/03/27/%E8%BD%AF%E5%B7%A5%E5%89%8D%E7%AB%AF%E5%AE%9E%E9%AA%8C2/"/>
      <url>/2023/03/27/%E8%BD%AF%E5%B7%A5%E5%89%8D%E7%AB%AF%E5%AE%9E%E9%AA%8C2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="前端基础Ⅱ"><a href="#前端基础Ⅱ" class="headerlink" title="前端基础Ⅱ"></a>前端基础Ⅱ</h1><p>​主要是配置<strong>Vue框架</strong>，实验本身特别简单，在此不再重复题目，仅仅复现一下其中用到的<strong>Vue框架</strong>的基础操作，也算是对教程视频<em>（2021年就录好的老东西）</em>的一个总结。</p><span id="more"></span><h2 id="Vue基础"><a href="#Vue基础" class="headerlink" title="Vue基础"></a>Vue基础</h2><h3 id="实例注册"><a href="#实例注册" class="headerlink" title="实例注册"></a>实例注册</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        &#123;&#123;product&#125;&#125; are in stock.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,<span class="comment">//注册名为app的元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">product</span>: <span class="string">&#x27;Boots&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;seen&quot;</span>&gt;</span>seen为TRUE<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span>seen为FALSE<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,<span class="comment">//注册名为app的元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">product</span>: <span class="string">&#x27;Boots&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">seen</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>v-if</em>判断后面<strong>表达式</strong>是TRUE还是FALSE，此外还有<em>v-else-if</em>用法相同。</p><h3 id="循环渲染"><a href="#循环渲染" class="headerlink" title="循环渲染"></a>循环渲染</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in productList&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;item.name&#125;&#125;剩下了&#123;&#123;item.num&#125;&#125;个</span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,<span class="comment">//注册名为app的元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">productList</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>: <span class="string">&quot;Boots&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">num</span>: <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">                  </span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">&quot;Jacket&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">num</span>: <span class="number">2</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>: <span class="string">&quot;Hat&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">num</span>: <span class="number">3</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>   </span><br></pre></td></tr></table></figure><p>虽然写的挺长，但这个模板几乎是固定的<em>（在vscode里直接输入vfor，Vue VSCode Snippets插件会自动给出完整模板）</em>。</p><h3 id="双向绑定"><a href="#双向绑定" class="headerlink" title="双向绑定"></a>双向绑定</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        &#123;&#123;product&#125;&#125; are in stock.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;product&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,<span class="comment">//注册名为app的元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">product</span>: <span class="string">&#x27;Boots&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>input</em>输入会改变<em>product</em>的值从而改变<code>&lt;h2&gt;</code>标签下的内容，如果用控制台更改<em>product</em>的值，<em>input</em>输入栏内也同样会变化。<em>（草，这里<code>&lt;h2&gt;</code>不用引号会被解读为标题2，别问我咋知道）</em></p><h3 id="监听事件——内联js"><a href="#监听事件——内联js" class="headerlink" title="监听事件——内联js"></a>监听事件——内联js</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in productList&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;item.name&#125;&#125;剩下了&#123;&#123;item.num&#125;&#125;个</span><br><span class="line">            <span class="comment">&lt;!--监听事件--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;item.num++&quot;</span>&gt;</span>Add<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,<span class="comment">//注册名为app的元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">productList</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>: <span class="string">&quot;Boots&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">num</span>: <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">                  </span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">&quot;Jacket&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">num</span>: <span class="number">2</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>: <span class="string">&quot;Hat&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">num</span>: <span class="number">3</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>   </span><br></pre></td></tr></table></figure><h3 id="监听事件——绑定方法"><a href="#监听事件——绑定方法" class="headerlink" title="监听事件——绑定方法"></a>监听事件——绑定方法</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line">        &#123;&#123;product&#125;&#125; are in stock.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--双向绑定--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;product&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;reset&quot;</span>&gt;</span></span><br><span class="line">        清空</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,<span class="comment">//注册名为app的元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">product</span>: <span class="string">&#x27;Boots&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            reset () &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">product</span> = <span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Vue框架"><a href="#Vue框架" class="headerlink" title="Vue框架"></a>Vue框架</h2><h3 id="Vue-router的引入"><a href="#Vue-router的引入" class="headerlink" title="Vue-router的引入"></a>Vue-router的引入</h3><p>主要用于注册路由，默认生成的Vue框架本身就已经引入，此处不再重复。</p><h3 id="Vue-router的使用"><a href="#Vue-router的使用" class="headerlink" title="Vue-router的使用"></a>Vue-router的使用</h3><p>非首页一般推荐使用懒加载，格式如下：</p><p>&#x2F;router&#x2F;index.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">Login</span> = (<span class="params"></span>) =&gt; <span class="keyword">import</span>(../views/<span class="title class_">Login</span>.<span class="property">vue</span>);<span class="comment">//此处Login.vue需要自行在views下编写</span></span><br><span class="line"><span class="keyword">const</span> routes = [<span class="comment">//此处省略其他页面的路由注册</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="title class_">Login</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h3 id="Vue-x的使用"><a href="#Vue-x的使用" class="headerlink" title="Vue-x的使用"></a>Vue-x的使用</h3><p>&#x2F;store&#x2F;index.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">    <span class="attr">state</span>: &#123;</span><br><span class="line">        <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">mutations</span>: &#123;</span><br><span class="line">        <span class="title function_">increment</span>(<span class="params">state</span>) &#123;</span><br><span class="line">            state.<span class="property">count</span>++;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">actions</span>: &#123;&#125;,</span><br><span class="line">    <span class="attr">modules</span>: &#123;&#125;,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//$store.state.count可以引用该状态</span></span><br><span class="line"><span class="comment">//$store.commit(&#x27;increment&#x27;)可以调用mutaiton</span></span><br></pre></td></tr></table></figure><h3 id="Element-UI的使用"><a href="#Element-UI的使用" class="headerlink" title="Element-UI的使用"></a>Element-UI的使用</h3><p>无脑素材库，直接去上官网，有详尽的安装引入和使用教程。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>大概也就这些了，后续我还会找教程多了解一点，感觉有很多模板里的东西还没用过。</p>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>软工前端实验1</title>
      <link href="/2023/03/19/%E8%BD%AF%E5%B7%A5%E5%89%8D%E7%AB%AF%E5%AE%9E%E9%AA%8C1/"/>
      <url>/2023/03/19/%E8%BD%AF%E5%B7%A5%E5%89%8D%E7%AB%AF%E5%AE%9E%E9%AA%8C1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="前端基础Ⅰ"><a href="#前端基础Ⅰ" class="headerlink" title="前端基础Ⅰ"></a>前端基础Ⅰ</h1><p>前端教程视频47分钟速通HTML，CSS，JS，主打一个囫囵吞枣，看完觉得好像会了，但细细回想又感觉啥也没学。好在有实验题目，实践几下马上就熟悉多了。</p><span id="more"></span><blockquote><h3 id="任务1"><a href="#任务1" class="headerlink" title="任务1"></a>任务1</h3><p>资源中的 <code>homework</code> 文件夹给出了一个模仿百度主页的网页（<code>index.html</code>），可是这个网页缺少了 CSS 和 JS 文件，你需要把附件文件夹中的 CSS 和 JS 代码引入到网页中</p></blockquote><p>最基础的东西，主要就是记住两行代码。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;附件/index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;附件/style.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>加在head标签下即可。</p><blockquote><h3 id="任务2"><a href="#任务2" class="headerlink" title="任务2"></a>任务2</h3><p>修改附件中的 <code>index.js</code>，使得点击搜索按钮后，浏览器会弹窗显示所搜索的内容。但是当搜索框为空的时候，点击搜索按钮后，浏览器会弹窗显示“请输入搜索内容”</p></blockquote><p>这里题目很宽松，仅仅让显示所搜索的内容，也就是<em><strong>显示输入的字符</strong></em>。搜索按钮点击后执行<em>search（）</em>函数，所以只要把<em>search（）</em>实现就行了。源代码给了一行：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>();</span><br></pre></td></tr></table></figure><p>在这里其实没多大用，可能就是想告诉我们有这个东西可以用来<em>debug</em>。</p><p>具体的实现很简单，先找到标签名字为input的元素，再对他的value进行判断。值得一提的是，<em>getElementsByTagName</em>里<em>Elements</em>是复数，所以返回的是个数组<em>（这里的因果是我瞎猜的</em>。具体代码也就几行：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">search</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> searchInput = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (searchInput[<span class="number">0</span>].<span class="property">value</span> === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;请输入搜索内容&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">alert</span>(searchInput[<span class="number">0</span>].<span class="property">value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此外<em>alert</em>也可以被<em>confirm</em>或者<em>prompt</em>替代。confirm（）是确认消息框，会询问用户一个“是或否”的问题，两个按钮也可以设置各自的操作：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> truthBeTold = <span class="variable language_">window</span>.<span class="title function_">confirm</span>(<span class="string">&quot;单击“确定”继续。单击“取消”停止。&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (truthBeTold) &#123;</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">alert</span>(<span class="string">&quot;欢迎访问&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">alert</span>(<span class="string">&quot;再见啦&quot;</span>);</span><br></pre></td></tr></table></figure><p>prompt（）则是一个提示消息框，提供了一个文本字段，用户可输入答案来响应。该消息框有一个“确定”按钮和一个“取消”按钮。如果提供了一个辅助字符串参数，则提示消息框将在文本字段显示该辅助字符串作为默认响应。否则，默认文本为 “<undefined>“。</undefined></p><p>alert（）就是啥按钮也没有，就给一条提示。</p><blockquote><h3 id="任务-3"><a href="#任务-3" class="headerlink" title="任务 3"></a>任务 3</h3><p>修改 <code>index.html</code>，使 <strong>热榜</strong> 部分的样式其尽可能与下方相似，相关的图片放在了 <code>img</code> 文件夹下，其中把“《你的学号》”换成你真实的学号（例如 <code>21373000</code>），如有必要可以注释原有的代码，但不要删除，因为后续的任务还会用到</p></blockquote><p><img src="https://buaa-goodbro2021.github.io/SE-Labs/images/lab2/image-20220321085947597.png"></p><p>这个任务还挺自由的，感觉方法挺多的。我是用table标签来完成的，方便对齐。基本就是大量重复代码，不全复制在这了，只复制一小部分：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">style</span>=<span class="string">&quot;line-height: 1px;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color:gray;&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我的世界<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;text-align: right;&quot;</span>&gt;</span>114514<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="comment">&lt;!--数字右对齐--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/up.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;15&quot;</span> <span class="attr">height</span>=<span class="string">&quot;15&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><h3 id="任务-4"><a href="#任务-4" class="headerlink" title="任务 4"></a>任务 4</h3><p>修改 index.js，使得在点击 ID 为 top-right 的元素之后，会调用 clickLogin 函数</p></blockquote><p>没啥好说的，感觉是凑数的任务。</p><blockquote><h3 id="任务-5"><a href="#任务-5" class="headerlink" title="任务 5"></a>任务 5</h3><p>点击登录按钮后，似乎用户已经正确地登录，但是页面似乎发生了一些错误。请尝试修改 <code>initUserInfo</code> 函数，使得用户登录后，页面显示依然正常。（使用审查元素分析网页变化）</p></blockquote><p><em>（在做这题之前，我就已经点了登录按钮想看看有啥，结果整个网页直接黑了，我还以为电脑卡了啥的，结果是设计的bug。）</em></p><p>看完这题第一反应就是应该是css有问题，三个文件对着看了半天没看出来哪有问题。没办法就开始猜，把js里要修改的函数一部分一部分的删看看哪一段有问题，结果还真让我删出来了，<strong>把${username}这个变量删掉后，页面就不会黑了</strong>。What？为啥一个文本变量有如此神力？不过既然确定了是变量有问题就简单了，直接用上面提到过的console：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(username);</span><br></pre></td></tr></table></figure><p>然后发现，好家伙，小小变量藏了一整条内容：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">已登录用户<span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css">*&#123;<span class="attribute">color</span>: <span class="number">#fff</span> <span class="meta">!important</span>;&#125;<span class="selector-tag">body</span>&#123;<span class="attribute">background-color</span>: <span class="number">#000</span> <span class="meta">!important</span>;&#125;<span class="selector-id">#mid</span> <span class="selector-tag">span</span>&#123;<span class="attribute">background-color</span>: <span class="number">#fff</span> <span class="meta">!important</span>;&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>所以就水落石出了，变量里的内容被解析，重新设置了背景和字体颜色。</p><blockquote><h2 id="附加任务"><a href="#附加任务" class="headerlink" title="附加任务"></a>附加任务</h2><ul><li>在任务 2 的基础上，使用户在搜索框按下回车的时候也可以进行搜索，并且会跳转到百度对应的搜索页面（处理键盘事件，链接外部页面）</li><li>在任务 3 的基础上加上醒目的大图，尽可能与下图相似</li></ul><p><img src="https://buaa-goodbro2021.github.io/SE-Labs/images/lab2/image-20220321090301004.png" alt="image-20220321090301004"></p><ul><li>观察 <code>index.html</code>，可以发现左上方的<code>&lt;a&gt;</code>标签的<code>href</code>特性中使用了 http 和 https 两种不同的协议，修改附件中的 <code>index.js</code> 和<code>style.css</code> ，使得鼠标悬停在使用 http 协议的<code>&lt;a&gt;</code>标签上时标签内容为红色</li></ul></blockquote><p>三个任务也都很简单。</p><p><strong>第一个任务</strong>就是拓展任务2，给<em>input</em>加上一个监听器监听回车键输入然后执行<em>search（）</em>即可，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;main-input&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;keypress&#x27;</span>,<span class="keyword">function</span>(<span class="params">event</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(event.<span class="property">key</span> ===<span class="string">&#x27;Enter&#x27;</span>)&#123;</span><br><span class="line">            event.<span class="title function_">preventDefault</span>();</span><br><span class="line">            <span class="title function_">search</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>至于跳转到百度，只需要小改一下<em>search（）</em>内容即可：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">search</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> 搜索触发后的行为</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>();</span><br><span class="line">    <span class="keyword">let</span> searchInput = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;input&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (searchInput[<span class="number">0</span>].<span class="property">value</span> === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;请输入搜索内容&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">`https://www.baidu.com/s?wd=<span class="subst">$&#123;searchInput[<span class="number">0</span>].value&#125;</span>`</span>;<span class="comment">//跳转到百度的搜索页面</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有意思的是百度早就料到会被人这么用了，每次跳转都会在控制台输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">这是一个最好的时代，</span><br><span class="line">科技的发展给予了每个人创造价值的可能性；</span><br><span class="line">这也是一个最充满想象的时代，</span><br><span class="line">每一位心怀梦想的人，终会奔向星辰大海。</span><br><span class="line">百度与你们一起仰望星辰大海，携手共筑未来！</span><br><span class="line"></span><br><span class="line">百度2023校园招聘简历投递：https://talent.baidu.com/jobs/list</span><br></pre></td></tr></table></figure><p>第二个任务涉及到排版，还是一如既往的自由。这里只讲述一下圆角矩形的做法以及左上角1的添加方法。主要就是调整<em>padding</em>和<em>border-radius</em>，padding可以调整长和宽，boder-radius可以自由调节四个角的圆角程度。具体使用如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;position: relative;&quot;</span>&gt;</span><span class="comment">&lt;!--让span和img连接起来--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/genshin.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border-radius: 10px; box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.5);&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;position:absolute; top: 0px;</span></span></span><br><span class="line"><span class="string"><span class="tag">left: 0px;</span></span></span><br><span class="line"><span class="string"><span class="tag">background-color: red;</span></span></span><br><span class="line"><span class="string"><span class="tag">display: inline-block;</span></span></span><br><span class="line"><span class="string"><span class="tag">padding: 11px 7px;</span></span></span><br><span class="line"><span class="string"><span class="tag">    border-radius: 10px 0 10px 0;</span></span></span><br><span class="line"><span class="string"><span class="tag">    color: white;</span></span></span><br><span class="line"><span class="string"><span class="tag">    font-size: 16px;</span></span></span><br><span class="line"><span class="string"><span class="tag">    font-weight: bold;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第三个任务也挺经典的，思路很简单，先在js里筛选出http协议的网站分入到一个类里，再去CSS把这个类里的元素修改。代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">JS</span>:</span><br><span class="line">    <span class="comment">// 获取所有链接</span></span><br><span class="line">    <span class="keyword">const</span> links = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 循环遍历所有链接</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; links.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="comment">// 如果链接的协议是 http，则添加 &quot;http-link&quot; 类</span></span><br><span class="line">        <span class="keyword">if</span> (links[i].<span class="property">protocol</span> === <span class="string">&quot;http:&quot;</span>) &#123;</span><br><span class="line">        links[i].<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;http-link&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CSS:</span><br><span class="line">    #top-left a.http-link:hover&#123;</span><br><span class="line">        <span class="attribute">color</span>: red;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>总体还是很简单的，毕竟是<strong>前端基础</strong>，而且还是<strong>实验1</strong>，只希望不是<em>从入门到入土</em>就行。</p>]]></content>
      
      
      <categories>
          
          <category> 前端基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>First Step</title>
      <link href="/2023/03/14/First-Step/"/>
      <url>/2023/03/14/First-Step/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="心血来潮"><a href="#心血来潮" class="headerlink" title="心血来潮"></a>心血来潮</h1><p>​之前偶然在bilibili刷到了一条视频，里面展示了一个up自己DIY的博客。看后大受震撼，心想自己也要搞一个，于是去网上搜如何搭建自己的博客。值得一提的是，这些事情均发生在<strong>公元2023年</strong>前，看看这篇文章发的时间你就应该懂我了。两次心血来潮中间隔了小个把月，总算还是把博客给整出来了。</p><p>​那这个博客我要发些什么呢？如果我要是知道也就不叫<strong>心血来潮</strong>了。想到什么发什么吧，说不定这个博客真能激发我好学的心呢。</p><p>​不过有一说一，这个博客的很多东西还要在探索探索，就像我现在连<strong>Typora</strong>都用不明白，特殊字体只懂加粗。无所谓，等下次心血来潮，我还会加一下<strong>新功能</strong>的（<em>确信</em>。</p><p>​文章发都发了怎么能一点<strong>代码</strong>没有呢，这根本不是<strong>软院学生</strong>的风格！姑且写一点吧。</p><p>​</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello,Blog&quot;</span>)</span><br></pre></td></tr></table></figure><p>​太晚了，<strong>好孩子该睡觉了</strong>。</p>]]></content>
      
      
      <categories>
          
          <category> 闲谈 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
